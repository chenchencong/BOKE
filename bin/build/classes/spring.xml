<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/boke"></property>
		<property name="user" value="root"></property>
		<property name="password" value="123456"></property>

		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="10"></property>
		<property name="maxStatements" value="100"></property>
		<property name="acquireIncrement" value="2"></property>
	</bean>
	
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- 管理Hibernate的常用配置 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
			</props>
		</property>
		
		<!-- 管理Hibernate的映射配置 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/etc/entity/*.hbm.xml</value>
			</list>
		</property>
		
	</bean>
	
    <!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">	

		<!-- 注入SessionFactory -->	
		<property name="sessionFactory" ref="sessionFactory"></property>   

	</bean>
	
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">

		<!-- 指定事务属性，即事务管理器如何控制事务 -->
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" read-only="false" />
		</tx:attributes>

	</tx:advice>
	
	<!-- 基于AOP配置声明式事务管理，即指定在哪些类的哪些方法上使用事务管理功能 -->
	<aop:config>
      
		<!-- 配置切入点表达式 -->
		<aop:pointcut  expression="execution(* com.etc.service.*.*(..))"  id="myPointcut"/>  

		<!-- 根据切入点表达式织入事务通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>

	</aop:config>
	
	<!-- 配置UserDAO实例 -->
	<bean id="userDAO" class="com.etc.dao.impl.UserDAOImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 配置UserService实例 -->
	<bean id="userService" class="com.etc.service.impl.UserServiceImpl">
		<!-- 注入userDAO -->
		<property name="userDAO" ref="userDAO"/>
	</bean>
	
	<!-- 配置UserAction实例 -->
	<bean id="userAction" class="com.etc.action.UserAction" scope="prototype">
		<!-- 注入userService -->
		<property name="userService" ref="userService"/>
	</bean>
	
	 <!-- 配置DataAction实例 -->
	<bean id="dataAction" class="com.etc.action.DataAction" scope="prototype">
		<!-- 注入userService -->
		<property name="userService" ref="userService"/>
	</bean>
	<bean id="CommentAction" class="com.etc.action.CommentAction" scope="prototype">
		<!-- 注入userService -->
		<property name="userService" ref="userService"/>
	</bean>
	<!-- 配置ValCodeAction实例 -->
	<bean id="valcodeAction" class="com.etc.action.ValcodeAction" scope="prototype">
	</bean>
	
</beans>
